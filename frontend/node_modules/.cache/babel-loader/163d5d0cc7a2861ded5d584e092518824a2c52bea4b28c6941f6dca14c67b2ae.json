{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjun\\\\OneDrive\\\\Desktop\\\\expense manager\\\\frontend\\\\src\\\\Components\\\\Chart\\\\Chart.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import {Chart as ChartJs, \n//     CategoryScale,\n//     LinearScale,\n//     PointElement,\n//     LineElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n//     ArcElement,\n// } from 'chart.js'\n\n// import {Line} from 'react-chartjs-2'\n// import styled from 'styled-components'\n// import { useGlobalContext } from '../../context/globalContext'\n// import { dateFormat } from '../../utils/dateFormat'\n\n// ChartJs.register(\n//     CategoryScale,\n//     LinearScale,\n//     PointElement,\n//     LineElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n//     ArcElement,\n// )\n\n// function Chart() {\n//     const {incomes, expenses} = useGlobalContext()\n\n//     const data = {\n//         labels: incomes.map((inc) =>{\n//             const {date} = inc\n//             return dateFormat(date)\n//         }),\n//         datasets: [\n//             {\n//                 label: 'Income',\n//                 data: [\n//                     ...incomes.map((income) => {\n//                         const {amount} = income\n//                         return amount\n//                     })\n//                 ],\n//                 backgroundColor: 'green',\n//                 tension: .2\n//             },\n//             {\n//                 label: 'Expenses',\n//                 data: [\n//                     ...expenses.map((expense) => {\n//                         const {amount} = expense\n//                         return amount\n//                     })\n//                 ],\n//                 backgroundColor: 'red',\n//                 tension: .2\n//             }\n//         ]\n//     }\n\n//     return (\n//         <ChartStyled >\n//             <Line data={data} />\n//         </ChartStyled>\n//     )\n// }\n\n// const ChartStyled = styled.div`\n//     background: #FCF6F9;\n//     border: 2px solid #FFFFFF;\n//     box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n//     padding: 1rem;\n//     border-radius: 20px;\n//     height: 100%;\n// `;\n\n// export default Chart\n\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Bar } from 'react-chartjs-2'; // Changed Line to Bar\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const data = {\n    labels: incomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date);\n    }),\n    datasets: [{\n      label: 'Income',\n      data: incomes.map(income => {\n        const {\n          amount\n        } = income;\n        return amount;\n      }),\n      backgroundColor: 'green',\n      tension: .2\n    }, {\n      label: 'Expenses',\n      data: expenses.map(expense => {\n        const {\n          amount\n        } = expense;\n        return amount;\n      }),\n      backgroundColor: 'red',\n      tension: .2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Bar","styled","useGlobalContext","dateFormat","register","incomes","expenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","tension","expense","ChartStyled","div"],"sources":["C:/Users/arjun/OneDrive/Desktop/expense manager/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["// import React from 'react'\r\n// import {Chart as ChartJs, \r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend,\r\n//     ArcElement,\r\n// } from 'chart.js'\r\n\r\n// import {Line} from 'react-chartjs-2'\r\n// import styled from 'styled-components'\r\n// import { useGlobalContext } from '../../context/globalContext'\r\n// import { dateFormat } from '../../utils/dateFormat'\r\n\r\n// ChartJs.register(\r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend,\r\n//     ArcElement,\r\n// )\r\n\r\n// function Chart() {\r\n//     const {incomes, expenses} = useGlobalContext()\r\n\r\n//     const data = {\r\n//         labels: incomes.map((inc) =>{\r\n//             const {date} = inc\r\n//             return dateFormat(date)\r\n//         }),\r\n//         datasets: [\r\n//             {\r\n//                 label: 'Income',\r\n//                 data: [\r\n//                     ...incomes.map((income) => {\r\n//                         const {amount} = income\r\n//                         return amount\r\n//                     })\r\n//                 ],\r\n//                 backgroundColor: 'green',\r\n//                 tension: .2\r\n//             },\r\n//             {\r\n//                 label: 'Expenses',\r\n//                 data: [\r\n//                     ...expenses.map((expense) => {\r\n//                         const {amount} = expense\r\n//                         return amount\r\n//                     })\r\n//                 ],\r\n//                 backgroundColor: 'red',\r\n//                 tension: .2\r\n//             }\r\n//         ]\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <ChartStyled >\r\n//             <Line data={data} />\r\n//         </ChartStyled>\r\n//     )\r\n// }\r\n\r\n// const ChartStyled = styled.div`\r\n//     background: #FCF6F9;\r\n//     border: 2px solid #FFFFFF;\r\n//     box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n//     padding: 1rem;\r\n//     border-radius: 20px;\r\n//     height: 100%;\r\n// `;\r\n\r\n// export default Chart\r\n\r\nimport React from 'react'\r\nimport { Chart as ChartJs, \r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js'\r\n\r\nimport { Bar } from 'react-chartjs-2' // Changed Line to Bar\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext'\r\nimport { dateFormat } from '../../utils/dateFormat'\r\n\r\nChartJs.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n)\r\n\r\nfunction Chart() {\r\n    const { incomes, expenses } = useGlobalContext()\r\n\r\n    const data = {\r\n        labels: incomes.map((inc) => {\r\n            const { date } = inc\r\n            return dateFormat(date)\r\n        }),\r\n        datasets: [\r\n            {\r\n                label: 'Income',\r\n                data: incomes.map((income) => {\r\n                    const { amount } = income\r\n                    return amount\r\n                }),\r\n                backgroundColor: 'green',\r\n                tension: .2\r\n            },\r\n            {\r\n                label: 'Expenses',\r\n                data: expenses.map((expense) => {\r\n                    const { amount } = expense\r\n                    return amount\r\n                }),\r\n                backgroundColor: 'red',\r\n                tension: .2\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <ChartStyled >\r\n            <Bar data={data} /> {/* Changed Line to Bar */}\r\n        </ChartStyled>\r\n    )\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n    background: #FCF6F9;\r\n    border: 2px solid #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n`;\r\n\r\nexport default Chart\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EACrBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACP,UAAU;AAEjB,SAASC,GAAG,QAAQ,iBAAiB,EAAC;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAA;AAEnDZ,OAAO,CAACa,QAAQ,CACZZ,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,CACb;AAED,SAAST,KAAK,GAAG;EAAA;EACb,MAAM;IAAEe,OAAO;IAAEC;EAAS,CAAC,GAAGJ,gBAAgB,EAAE;EAEhD,MAAMK,IAAI,GAAG;IACTC,MAAM,EAAEH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAK;MACzB,MAAM;QAAEC;MAAK,CAAC,GAAGD,GAAG;MACpB,OAAOP,UAAU,CAACQ,IAAI,CAAC;IAC3B,CAAC,CAAC;IACFC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAEF,OAAO,CAACI,GAAG,CAAEK,MAAM,IAAK;QAC1B,MAAM;UAAEC;QAAO,CAAC,GAAGD,MAAM;QACzB,OAAOC,MAAM;MACjB,CAAC,CAAC;MACFC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE;IACb,CAAC,EACD;MACIJ,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAED,QAAQ,CAACG,GAAG,CAAES,OAAO,IAAK;QAC5B,MAAM;UAAEH;QAAO,CAAC,GAAGG,OAAO;QAC1B,OAAOH,MAAM;MACjB,CAAC,CAAC;MACFC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,oBACI,QAAC,WAAW;IAAA,wBACR,QAAC,GAAG;MAAC,IAAI,EAAEV;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,KAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEtB;AAAC,GAnCQjB,KAAK;EAAA,QACoBY,gBAAgB;AAAA;AAAA,KADzCZ,KAAK;AAqCd,MAAM6B,WAAW,GAAGlB,MAAM,CAACmB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,WAAW;AASjB,eAAe7B,KAAK;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}