{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjun\\\\OneDrive\\\\Desktop\\\\expense manager\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchData = async (url, setter) => {\n    try {\n      const response = await axios.get(url);\n      setter(response.data);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const postData = async (url, data, getter) => {\n    try {\n      await axios.post(url, data);\n      getter();\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const deleteData = async (url, getter) => {\n    try {\n      await axios.delete(url);\n      getter();\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const totalAmount = items => {\n    return items.reduce((total, item) => total + item.amount, 0);\n  };\n  const totalIncome = () => totalAmount(incomes);\n  const totalExpenses = () => totalAmount(expenses);\n  const totalBalance = () => totalIncome() - totalExpenses();\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history;\n  };\n  const getIncomes = () => fetchData(`${BASE_URL}get-incomes`, setIncomes);\n  const getExpenses = () => fetchData(`${BASE_URL}get-expenses`, setExpenses);\n  const addIncome = income => postData(`${BASE_URL}add-income`, income, getIncomes);\n  const addExpense = expense => postData(`${BASE_URL}add-expense`, expense, getExpenses);\n  const deleteIncome = id => deleteData(`${BASE_URL}delete-income/${id}`, getIncomes);\n  const deleteExpense = id => deleteData(`${BASE_URL}delete-expense/${id}`, getExpenses);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n\n// import React, { useContext, useState } from \"react\"\n// import axios from 'axios'\n\n// const BASE_URL = \"http://localhost:5000/api/v1/\";\n\n// const GlobalContext = React.createContext()\n\n// export const GlobalProvider = ({children}) => {\n\n//     const [incomes, setIncomes] = useState([])\n//     const [expenses, setExpenses] = useState([])\n//     const [error, setError] = useState(null)\n\n//     //calculate incomes\n//     const addIncome = async (income) => {\n//         const response = await axios.post(`${BASE_URL}add-income`, income)\n//             .catch((err) =>{\n//                 setError(err.response.data.message)\n//             })\n//         getIncomes()\n//     }\n\n//     const getIncomes = async () => {\n//         const response = await axios.get(`${BASE_URL}get-incomes`)\n//         setIncomes(response.data)\n//         console.log(response.data)\n//     }\n\n//     const deleteIncome = async (id) => {\n//         const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\n//         getIncomes()\n//     }\n\n//     const totalIncome = () => {\n//         let totalIncome = 0;\n//         incomes.forEach((income) =>{\n//             totalIncome = totalIncome + income.amount\n//         })\n\n//         return totalIncome;\n//     }\n\n//     //calculate incomes\n//     const addExpense = async (income) => {\n//         const response = await axios.post(`${BASE_URL}add-expense`, income)\n//             .catch((err) =>{\n//                 setError(err.response.data.message)\n//             })\n//         getExpenses()\n//     }\n\n//     const getExpenses = async () => {\n//         const response = await axios.get(`${BASE_URL}get-expenses`)\n//         setExpenses(response.data)\n//         console.log(response.data)\n//     }\n\n//     const deleteExpense = async (id) => {\n//         const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\n//         getExpenses()\n//     }\n\n//     const totalExpenses = () => {\n//         let totalIncome = 0;\n//         expenses.forEach((income) =>{\n//             totalIncome = totalIncome + income.amount\n//         })\n\n//         return totalIncome;\n//     }\n\n//     const totalBalance = () => {\n//         return totalIncome() - totalExpenses()\n//     }\n\n//     const transactionHistory = () => {\n//         const history = [...incomes, ...expenses]\n//         history.sort((a, b) => {\n//             return new Date(b.createdAt) - new Date(a.createdAt)\n//         })\n\n//         return history.slice(0, 99999)\n\n// }\n\n//     return (\n//         <GlobalContext.Provider value={{\n//             addIncome,\n//             getIncomes,\n//             incomes,\n//             deleteIncome,\n//             expenses,\n//             totalIncome,\n//             addExpense,\n//             getExpenses,\n//             deleteExpense,\n//             totalExpenses,\n//             totalBalance,\n//             transactionHistory,\n//             error,\n//             setError\n//         }}>\n//             {children}\n//         </GlobalContext.Provider>\n//     )\n// }\n\n// export const useGlobalContext = () =>{\n//     return useContext(GlobalContext)\n// }\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","fetchData","url","setter","response","get","data","message","postData","getter","post","deleteData","delete","totalAmount","items","reduce","total","item","amount","totalIncome","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","getIncomes","getExpenses","addIncome","income","addExpense","expense","deleteIncome","id","deleteExpense","useGlobalContext"],"sources":["C:/Users/arjun/OneDrive/Desktop/expense manager/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchData = async (url, setter) => {\r\n        try {\r\n            const response = await axios.get(url);\r\n            setter(response.data);\r\n        } catch (error) {\r\n            setError(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    const postData = async (url, data, getter) => {\r\n        try {\r\n            await axios.post(url, data);\r\n            getter();\r\n        } catch (error) {\r\n            setError(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    const deleteData = async (url, getter) => {\r\n        try {\r\n            await axios.delete(url);\r\n            getter();\r\n        } catch (error) {\r\n            setError(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    const totalAmount = (items) => {\r\n        return items.reduce((total, item) => total + item.amount, 0);\r\n    };\r\n\r\n    const totalIncome = () => totalAmount(incomes);\r\n\r\n    const totalExpenses = () => totalAmount(expenses);\r\n\r\n    const totalBalance = () => totalIncome() - totalExpenses();\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses];\r\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        return history;\r\n    };\r\n\r\n    const getIncomes = () => fetchData(`${BASE_URL}get-incomes`, setIncomes);\r\n    const getExpenses = () => fetchData(`${BASE_URL}get-expenses`, setExpenses);\r\n    const addIncome = (income) => postData(`${BASE_URL}add-income`, income, getIncomes);\r\n    const addExpense = (expense) => postData(`${BASE_URL}add-expense`, expense, getExpenses);\r\n    const deleteIncome = (id) => deleteData(`${BASE_URL}delete-income/${id}`, getIncomes);\r\n    const deleteExpense = (id) => deleteData(`${BASE_URL}delete-expense/${id}`, getExpenses);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useContext, useState } from \"react\"\r\n// import axios from 'axios'\r\n\r\n\r\n// const BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n\r\n// const GlobalContext = React.createContext()\r\n\r\n// export const GlobalProvider = ({children}) => {\r\n\r\n//     const [incomes, setIncomes] = useState([])\r\n//     const [expenses, setExpenses] = useState([])\r\n//     const [error, setError] = useState(null)\r\n\r\n//     //calculate incomes\r\n//     const addIncome = async (income) => {\r\n//         const response = await axios.post(`${BASE_URL}add-income`, income)\r\n//             .catch((err) =>{\r\n//                 setError(err.response.data.message)\r\n//             })\r\n//         getIncomes()\r\n//     }\r\n\r\n//     const getIncomes = async () => {\r\n//         const response = await axios.get(`${BASE_URL}get-incomes`)\r\n//         setIncomes(response.data)\r\n//         console.log(response.data)\r\n//     }\r\n\r\n//     const deleteIncome = async (id) => {\r\n//         const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n//         getIncomes()\r\n//     }\r\n\r\n//     const totalIncome = () => {\r\n//         let totalIncome = 0;\r\n//         incomes.forEach((income) =>{\r\n//             totalIncome = totalIncome + income.amount\r\n//         })\r\n\r\n//         return totalIncome;\r\n//     }\r\n\r\n\r\n//     //calculate incomes\r\n//     const addExpense = async (income) => {\r\n//         const response = await axios.post(`${BASE_URL}add-expense`, income)\r\n//             .catch((err) =>{\r\n//                 setError(err.response.data.message)\r\n//             })\r\n//         getExpenses()\r\n//     }\r\n\r\n//     const getExpenses = async () => {\r\n//         const response = await axios.get(`${BASE_URL}get-expenses`)\r\n//         setExpenses(response.data)\r\n//         console.log(response.data)\r\n//     }\r\n\r\n//     const deleteExpense = async (id) => {\r\n//         const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n//         getExpenses()\r\n//     }\r\n\r\n//     const totalExpenses = () => {\r\n//         let totalIncome = 0;\r\n//         expenses.forEach((income) =>{\r\n//             totalIncome = totalIncome + income.amount\r\n//         })\r\n\r\n//         return totalIncome;\r\n//     }\r\n\r\n\r\n//     const totalBalance = () => {\r\n//         return totalIncome() - totalExpenses()\r\n//     }\r\n\r\n//     const transactionHistory = () => {\r\n//         const history = [...incomes, ...expenses]\r\n//         history.sort((a, b) => {\r\n//             return new Date(b.createdAt) - new Date(a.createdAt)\r\n//         })\r\n\r\n//         return history.slice(0, 99999)\r\n        \r\n// }\r\n\r\n\r\n//     return (\r\n//         <GlobalContext.Provider value={{\r\n//             addIncome,\r\n//             getIncomes,\r\n//             incomes,\r\n//             deleteIncome,\r\n//             expenses,\r\n//             totalIncome,\r\n//             addExpense,\r\n//             getExpenses,\r\n//             deleteExpense,\r\n//             totalExpenses,\r\n//             totalBalance,\r\n//             transactionHistory,\r\n//             error,\r\n//             setError\r\n//         }}>\r\n//             {children}\r\n//         </GlobalContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export const useGlobalContext = () =>{\r\n//     return useContext(GlobalContext)\r\n// }"],"mappings":"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MACZC,kBAAkB;MAClBvB,KAAK;MACLC;IACJ,CAAE;IAAA,UACGN;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAEjC,CAAC;AAAA,GA5EYD,cAAc;AAAA,KAAdA,cAAc;AA8E3B,OAAO,MAAM6C,gBAAgB,GAAG,MAAM;EAAA;EAClC,OAAOnD,UAAU,CAACI,aAAa,CAAC;AACpC,CAAC;;AA+BD;AACA;;AAGA;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,IAnJa+C,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}